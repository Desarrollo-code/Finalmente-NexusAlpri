// ========================================================================
// PRISMA SCHEMA FILE
// ========================================================================

// ------------------------------------------------------------------------
// GENERATOR & DATASOURCE
// ------------------------------------------------------------------------
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// ------------------------------------------------------------------------
// ENUMERATIONS
// ------------------------------------------------------------------------
enum UserRole {
  ADMINISTRATOR
  INSTRUCTOR
  STUDENT
}

enum CourseStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
  SCHEDULED
}

enum LessonType {
  TEXT
  VIDEO
  QUIZ
  FILE
}

enum EnrollmentStatus {
  PENDING
  ACTIVE
  COMPLETED
  CANCELLED
}

enum EventType {
  CLASS
  MEETING
  DEADLINE
  HOLIDAY
}

enum SubmissionStatus {
  SUBMITTED
  GRADED
  LATE
  MISSING
}

enum NotificationType {
  SYSTEM
  MESSAGE
  ALERT
  REMINDER
}

enum ResourceType {
  DOCUMENT
  VIDEO
  LINK
  IMAGE
}

enum PaymentStatus {
  PENDING
  PAID
  FAILED
  REFUNDED
}

// ------------------------------------------------------------------------
// MODELS
// ------------------------------------------------------------------------

// ========================================================================
// USERS
// ========================================================================
model User {
  id                 String              @id @default(cuid())
  email              String              @unique
  password           String
  name               String
  role               UserRole            @default(STUDENT)
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt

  // Relations
  coursesEnrolled    Enrollment[]
  coursesTaught      Course[]            @relation("InstructorCourses")
  lessonsCreated     Lesson[]
  submissions        Submission[]
  messagesSent       Message[]           @relation("SentMessages")
  messagesReceived   Message[]           @relation("ReceivedMessages")
  notifications      Notification[]
  createdEvents      CalendarEvent[]     @relation("CreatedEvents")
  participations     EventParticipant[]
  announcements      Announcement[]
  discussions        Discussion[]
  posts              Post[]
  comments           Comment[]
  files              File[]
  gradesGiven        Grade[]             @relation("GivenGrades")
  gradesReceived     Grade[]             @relation("ReceivedGrades")
  payments           Payment[]
}

// ========================================================================
// COURSES
// ========================================================================
model Course {
  id             String         @id @default(cuid())
  title          String
  description    String?
  status         CourseStatus   @default(DRAFT)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  // Relations
  instructor     User           @relation("InstructorCourses", fields: [instructorId], references: [id])
  instructorId   String
  enrollments    Enrollment[]
  lessons        Lesson[]
  announcements  Announcement[]
  resources      Resource[]
  discussions    Discussion[]
  calendarEvents CalendarEvent[]
}

// ========================================================================
// ENROLLMENTS
// ========================================================================
model Enrollment {
  id          String            @id @default(cuid())
  status      EnrollmentStatus  @default(PENDING)
  enrolledAt  DateTime          @default(now())

  // Relations
  student     User              @relation(fields: [studentId], references: [id])
  studentId   String
  course      Course            @relation(fields: [courseId], references: [id])
  courseId    String
}

// ========================================================================
// LESSONS
// ========================================================================
model Lesson {
  id            String       @id @default(cuid())
  title         String
  content       String?
  type          LessonType
  position      Int
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  // Relations
  course        Course       @relation(fields: [courseId], references: [id])
  courseId      String
  creator       User         @relation(fields: [creatorId], references: [id])
  creatorId     String
  submissions   Submission[]
  files         File[]
}

// ========================================================================
// SUBMISSIONS
// ========================================================================
model Submission {
  id          String            @id @default(cuid())
  content     String?
  createdAt   DateTime          @default(now())
  status      SubmissionStatus  @default(SUBMITTED)

  // Relations
  lesson      Lesson            @relation(fields: [lessonId], references: [id])
  lessonId    String
  student     User              @relation(fields: [studentId], references: [id])
  studentId   String
  grade       Grade?
}

// ========================================================================
// GRADES
// ========================================================================
model Grade {
  id           String    @id @default(cuid())
  score        Float
  feedback     String?
  createdAt    DateTime  @default(now())

  // Relations
  submission   Submission @relation(fields: [submissionId], references: [id])
  submissionId String
  gradedBy     User       @relation("GivenGrades", fields: [gradedById], references: [id])
  gradedById   String
  gradedTo     User       @relation("ReceivedGrades", fields: [gradedToId], references: [id])
  gradedToId   String
}

// ========================================================================
// ANNOUNCEMENTS
// ========================================================================
model Announcement {
  id          String    @id @default(cuid())
  title       String
  content     String
  createdAt   DateTime  @default(now())

  // Relations
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    String
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
}

// ========================================================================
// DISCUSSIONS
// ========================================================================
model Discussion {
  id          String    @id @default(cuid())
  title       String
  createdAt   DateTime  @default(now())

  // Relations
  course      Course    @relation(fields: [courseId], references: [id])
  courseId    String
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  posts       Post[]
}

// ========================================================================
// POSTS
// ========================================================================
model Post {
  id            String    @id @default(cuid())
  content       String
  createdAt     DateTime  @default(now())

  // Relations
  discussion    Discussion @relation(fields: [discussionId], references: [id])
  discussionId  String
  author        User       @relation(fields: [authorId], references: [id])
  authorId      String
  comments      Comment[]
}

// ========================================================================
// COMMENTS
// ========================================================================
model Comment {
  id        String    @id @default(cuid())
  content   String
  createdAt DateTime  @default(now())

  // Relations
  post      Post      @relation(fields: [postId], references: [id])
  postId    String
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String
}

// ========================================================================
// MESSAGES
// ========================================================================
model Message {
  id          String    @id @default(cuid())
  content     String
  createdAt   DateTime  @default(now())

  // Relations
  sender      User      @relation("SentMessages", fields: [senderId], references: [id])
  senderId    String
  receiver    User      @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId  String
}

// ========================================================================
// NOTIFICATIONS
// ========================================================================
model Notification {
  id          String            @id @default(cuid())
  type        NotificationType
  content     String
  isRead      Boolean           @default(false)
  createdAt   DateTime          @default(now())

  // Relations
  user        User              @relation(fields: [userId], references: [id])
  userId      String
}

// ========================================================================
// CALENDAR EVENTS
// ========================================================================
model CalendarEvent {
  id          String         @id @default(cuid())
  title       String
  description String?
  type        EventType
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime        @default(now())

  // Relations
  course      Course?         @relation(fields: [courseId], references: [id])
  courseId    String?
  creator     User            @relation("CreatedEvents", fields: [creatorId], references: [id])
  creatorId   String
  participants EventParticipant[]
}

// ========================================================================
// EVENT PARTICIPANTS
// ========================================================================
model EventParticipant {
  id        String        @id @default(cuid())
  joinedAt  DateTime      @default(now())

  // Relations
  user      User          @relation(fields: [userId], references: [id])
  userId    String
  event     CalendarEvent @relation(fields: [eventId], references: [id])
  eventId   String
}

// ========================================================================
// RESOURCES
// ========================================================================
model Resource {
  id          String        @id @default(cuid())
  title       String
  url         String
  type        ResourceType
  createdAt   DateTime      @default(now())

  // Relations
  course      Course        @relation(fields: [courseId], references: [id])
  courseId    String
}

// ========================================================================
// FILES
// ========================================================================
model File {
  id          String    @id @default(cuid())
  filename    String
  url         String
  uploadedAt  DateTime  @default(now())

  // Relations
  lesson      Lesson?   @relation(fields: [lessonId], references: [id])
  lessonId    String?
  uploader    User      @relation(fields: [uploaderId], references: [id])
  uploaderId  String
}

// ========================================================================
// PAYMENTS
// ========================================================================
model Payment {
  id          String        @id @default(cuid())
  amount      Float
  status      PaymentStatus @default(PENDING)
  createdAt   DateTime      @default(now())

  // Relations
  user        User          @relation(fields: [userId], references: [id])
  userId      String
}
